local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = game.Players.LocalPlayer
local gameValues = ReplicatedStorage:WaitForChild("GameValues")
local warmupFinished = gameValues:WaitForChild("WarmupFinished")
local VirtualUser = game:GetService('VirtualUser')
local StarterGui = game:GetService('StarterGui')
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

StarterGui:SetCore("SendNotification", { Title = "XP SCRIPT | BADGEPLUG |", Text = "| ACTIVATED |", Duration = 5 })

player.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

local function disableAFKCheck()
    local function disableScriptInGui(gui)
        local afkCheckScript = gui:FindFirstChild("AFK.Check")
        if afkCheckScript and afkCheckScript:IsA("LocalScript") then
            afkCheckScript.Disabled = true
        end
    end
    local starterGuiAFKUi = StarterGui:FindFirstChild("AFK.Ui")
    if starterGuiAFKUi then
        disableScriptInGui(starterGuiAFKUi)
    end
    local playerGuiAFKUi = player.PlayerGui:FindFirstChild("AFK.Ui")
    if playerGuiAFKUi then
        disableScriptInGui(playerGuiAFKUi)
    end
end

disableAFKCheck()

local humanoidsFolder = workspace:FindFirstChild("Humanoids")
local character = humanoidsFolder and humanoidsFolder:FindFirstChild(player.Name)
if not character then
    character = player.Character or player.CharacterAdded:Wait()
end

local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local active = false

local function AutoShoot()
    if warmupFinished.Value == false then
        local args = {true, "Shooting", "Standing Shot"}
        local event = ReplicatedStorage:WaitForChild("PlayerEvents"):WaitForChild("Shooting")
        local actionValues = player.Backpack:WaitForChild("ActionValues", 5)
        local powerValue = actionValues and actionValues:WaitForChild("Power", 2)
        local gameplayAnimations = player.Backpack:WaitForChild("GameplayAnimations", 5)
        local shootingAnimations = gameplayAnimations and gameplayAnimations:WaitForChild("ShootingAnimations", 2)
        local animation = shootingAnimations and shootingAnimations:FindFirstChild("Jumpshot")
        if powerValue then
            powerValue.Value = 1
        end
        if animation and humanoid then
            local animator = humanoid:FindFirstChildOfClass("Animator")
            if animator then
                local animTrack = animator:LoadAnimation(animation)
                animTrack:Play()
            end
        end
        if event then
            for _ = 1, 250 do
                if warmupFinished.Value == true then break end
                event:FireServer(unpack(args))
            end
        end
    end
    active = false
end

local function walkToNearestBall()
    if warmupFinished.Value == true then return end
    local nearestBall = nil
    local minDistance = math.huge
    local ballsFolder = workspace:FindFirstChild("Balls")
    if ballsFolder then
        for _, ball in pairs(ballsFolder:GetChildren()) do
            if ball.Name == "Ball" and ball:IsA("BasePart") then
                local distance = (ball.Position - character.HumanoidRootPart.Position).magnitude
                if distance < minDistance then
                    nearestBall = ball
                    minDistance = distance
                end
            end
        end
    end
    if nearestBall and warmupFinished.Value == false then
        humanoid:MoveTo(nearestBall.Position)
        humanoid.MoveToFinished:Wait()
        task.wait(0.5)
        if warmupFinished.Value == false then
            AutoShoot()
        end
    end
end

RunService.Heartbeat:Connect(function()
    local x2Event = ReplicatedStorage:FindFirstChild("X2Event")
    if x2Event then
        x2Event.Value = true
    end
    local expMultiplier = ReplicatedStorage:FindFirstChild("RECSettings") and ReplicatedStorage.RECSettings:FindFirstChild("EXP_Multiplier")
    if expMultiplier and expMultiplier:IsA("IntValue") then
        expMultiplier.Value = 10000
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.T and warmupFinished.Value == false and not active then
        active = true
        walkToNearestBall()
    end
end)

-- ðŸŸ¢ Sprint toggle (Y key)
local sprinting = false

task.spawn(function()
    local sprintEvent = ReplicatedStorage:WaitForChild("PlayerEvents"):WaitForChild("Sprinting")
    local args = {true}
    while true do
        if sprinting and warmupFinished.Value == true then
            sprintEvent:FireServer(unpack(args))
        end
        task.wait(0.1)
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Y and warmupFinished.Value == true then
        sprinting = not sprinting
        StarterGui:SetCore("SendNotification", {
            Title = "Sprint Toggle",
            Text = sprinting and "Sprint: ON" or "Sprint: OFF",
            Duration = 3
        })
    end
end)
